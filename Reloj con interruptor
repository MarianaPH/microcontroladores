#include "p16F628a.inc"    
 __CONFIG _FOSC_INTOSCCLK & _WDTE_OFF & _PWRTE_OFF & _MCLRE_ON & _BOREN_OFF & _LVP_OFF & _CPD_OFF & _CP_OFF    

RES_VECT  CODE    0x00000000; processor reset vector  
    GOTO    START                   ; go to beginning of program
INT_VECT CODE 0x0004 ; interrupt vector

    DECFSZ TNT
    GOTO llamar
    MOVLW '9'
    XORWF d6, 0
    BTFSC STATUS, Z
    CALL mov6
    INCF d6
    MOVLW D'16' ; 50mS * value
    MOVWF TNT
    MOVLW D'100' ; preload value
    MOVWF TMR0

llamar:
    bcf INTCON, T0IF ; clr TMR0 interrupt flag
    retfie ; return from interrupt
    
mov6
    MOVLW d'47'
    MOVWF d6
    MOVLW '5'
    XORWF d5, 0
    BTFSC STATUS, Z
    CALL mov5
    INCF d5
    RETURN

mov5
    MOVLW d'47'
    MOVWF d5
    MOVLW '9'
    XORWF d4, 0
    BTFSC STATUS, Z
    CALL mov4
    INCF d4
    RETURN
    
mov4
    MOVLW d'47'
    MOVWF d4
    MOVLW '5'
    XORWF d3, 0
    BTFSC STATUS, Z
    CALL mov3
    INCF d3
    RETURN
    
mov3
    MOVLW d'47'
    MOVWF d3
    MOVLW '3'
    XORWF d2, 0
    BTFSC STATUS, Z
    CALL mov2.1
    MOVLW '9'
    XORWF d2, 0
    BTFSC STATUS, Z
    CALL mov2
    INCF d2
    RETURN

mov2.1
    MOVLW '2'
    XORWF d1, 0
    BTFSS STATUS, Z
    GOTO r
    MOVLW d'47'
    MOVWF d2
    MOVLW d'48'
    MOVWF d1
r:  RETURN
    
mov2
    MOVLW d'47'
    MOVWF d2
    MOVLW '2'
    XORWF d1, 0
    BTFSC STATUS, Z
    CALL mov1
    INCF d1
    RETURN
    
mov1
    MOVLW d'47'
    MOVWF d1
    RETURN
    
MAIN_PROG CODE                      ; let linker place main program

i equ 0x20
j equ 0x21
k equ 0x32
d1 equ 0x33
d2 equ 0x34
d3 equ 0x35
d4 equ 0x36
d5 equ 0x37
d6 equ 0x38
TNT equ 0x39

START
    MOVLW 0x07
    MOVWF CMCON
    BCF STATUS, RP1
    BSF STATUS, RP0 
    CLRF TRISB
    CLRF TRISA
    MOVLW b'10000111'
    MOVWF OPTION_REG
    BCF STATUS, RP0
    BSF INTCON, GIE ; enable global interrupt
    BSF INTCON, T0IE ; enable TMR0 interrupt
    BCF INTCON, T0IF ; clr TMR0 interrupt flag to turn on,
    MOVLW D'60' ; preload value
    MOVWF TMR0
    MOVLW D'10' ; 50mS * 20 = 1 Sec.
    MOVWF TNT
    CLRF PORTA
    CLRF PORTB
    BCF PORTA,1
    BCF PORTA,0
    
    MOVLW '2'
    MOVWF d1
    MOVLW '3'
    MOVWF d2
    MOVLW '5'
    MOVWF d3
    MOVLW '9'
    MOVWF d4
    MOVLW '4'
    MOVWF d5
    MOVLW '9'
    MOVWF d6
    
INITLCD
    BCF PORTA,0		;reset
    MOVLW 0x01
    MOVWF PORTB
    
    BSF PORTA,1		;ejecutar
    CALL tiempo
    BCF PORTA,1
    CALL tiempo
    
    MOVLW 0x0C		;first line
    MOVWF PORTB
    
    BSF PORTA,1		;ejecutar
    CALL tiempo
    BCF PORTA,1
    CALL tiempo
         
    MOVLW 0x3C		;cursor mode
    MOVWF PORTB
    
    BSF PORTA,1		;ejecutar
    CALL tiempo
    BCF PORTA,1
    CALL tiempo
        
INICIO	  
   
    BCF PORTA,0		;command mode
    CALL tiempo
    
    MOVLW 0x81		;LCD position
    MOVWF PORTB
    CALL ejecutar
    
    BSF PORTA,0		;data mode
    CALL tiempo
    
    MOVLW b'11101100'		;message1
    MOVWF PORTB
    CALL ejecutar
    MOVLW 'H'
    MOVWF PORTB
    CALL ejecutar
    MOVLW 'o'
    MOVWF PORTB
    CALL ejecutar
    MOVLW 'r'
    MOVWF PORTB
    CALL ejecutar
    MOVLW 'a'
    MOVWF PORTB
    CALL ejecutar
    MOVLW ':'
    MOVWF PORTB
    CALL ejecutar
    
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    BCF PORTA,0		;command mode
    CALL tiempo
    
    MOVLW 0xC8		;LCD position 
    MOVWF PORTB
    CALL ejecutar
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    BSF PORTA,0		;data mode
    CALL tiempo
    
    MOVFW d1
    MOVWF PORTB
    CALL ejecutar
    MOVFW d2
    MOVWF PORTB
    CALL ejecutar
    MOVLW ':'
    MOVWF PORTB
    CALL ejecutar
    MOVFW d3
    MOVWF PORTB
    CALL ejecutar
    MOVFW d4
    MOVWF PORTB
    CALL ejecutar
    MOVLW ':'
    MOVWF PORTB
    CALL ejecutar
    MOVFW d5
    MOVWF PORTB
    CALL ejecutar
    MOVFW d6
    MOVWF PORTB
    CALL ejecutar
    MOVLW b'11110100'
    MOVWF PORTB
    CALL ejecutar
    
        
    GOTO INICIO

ejecutar

    BSF PORTA,1		;ejecutar
    CALL tiempo
    BCF PORTA,1
    CALL tiempo
    RETURN
    
tiempo
    CLRF i
    MOVLW d'10'
    MOVWF j
repetir    
    MOVLW d'80'
    MOVWF i
    DECFSZ i
    GOTO $-1
    DECFSZ j
    GOTO repetir
    RETURN
			
			
    END
